<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper 태그로 시작되며, 규칙은 "" 안에 있는 주소의 규칙을 따른다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace: 연동할 인터페이스의 풀네임  -->
<mapper namespace="com.spring.mvcproject.database.mybatis.repository.PetRepository">

    <!-- [구조]
          <쿼리종류(insert/select/update/delete)
                id="@Mapper 클래스의 어떤 메소드가 호출될때 이 쿼리를 실행하 것인가"
                    (DB의 정보를 추출하여 클라이언트에게 전달할 경우) resultType="DB 내용을 어떤 형태(객체, int 등)로 변환할 것인가"
           >
                  쿼리문
                  (클라이언트에게 메소드의 인자로 받은 값을 사용하려면, #{인자} 혹은 #{인자인 객체의 필드명})
          </쿼리닫기>
    -->
    <insert id="save">
        INSERT INTO tbl_pet
            (pet_name, pet_age, injection)
        VALUES
        --  클라이언트에게 메소드의 인자로 Pet을 받았는데(Pet 클래스의 save() 메소드 paraemter보면 Pet을 받음),
        --  DB의 pet_Name 칼럼의 값을 Values을 클라이언트에게 전달받은 Pet 객체의 petName 필드 값으로 넣어달라.
            (#{petName}, #{petAge}, #{injection})
    </insert>

    <!--  select는 resultType(DB를 어떤 것으로 변환할 것인지를 풀 네임으로) 필수 -->
    <!-- 원래는 com.spring.mvcproject.database.mybatis.Pet인데 귀찮으니까 설정파일에서 type-aliases-package에 지정-->
    <select id="findById" resultType="Pet">
        SELECT * FROM tbl_pet
        WHERE id = #{id}
        -- PetRepository 인터페이스의
        -- (해당 인터페이스는 @Mapper가 설정되어 있어야 하며, 이 파일에서도 mapper namespace에 해당 인터페이스가 설정되어 있어야 함)
        -- findById(Long id) 메소드가 호츨되면 (id = "findById")
        --    ->  해당 쿼리를를 실행해라.
        --    -> 이 때, WHERE id = 의 조건은 findById(Long id)의 인자인 id를 써라.
        --    -> 그리고 next()을 하면서 한 줄 한 줄 돌아가면서 (resultType="Pet"이므로) Pet 객체로 바꿔줘라.
    </select>

    <select id="findAll" resultType="com.spring.mvcproject.database.mybatis.entity.Pet">
<!--        <result property="id" column="pet_id"/>-->
        SELECT * FROM tbl_pet
    </select>

    <update id="updatePet">
        UPDATE tbl_pet
        SET
            pet_name = #{petName}
          , pet_age = #{petAge}
          , injection = #{injection}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM tbl_pet
        WHERE id = #{id}
    </delete>

    <select id="petCount" resultType="int">
        SELECT COUNT(*)
        FROM tbl_pet
    </select>

</mapper>